
alias currPID S0;
currPID=(PTBR-1024)/8;

alias currPCB S1;
currPCB=READY_LIST+32*currPID;

[currPCB+1]=1;


breakpoint;
[currPCB+2]=BP;
[currPCB+3]=SP-1;

alias physicalSP S2;

physicalSP= ([PTBR+2*(SP/512)]*512)+(SP%512);
[currPCB+4]=[physicalSP];

[currPCB+5]=PTBR;
[currPCB+6]=PTLR;

[currPCB+7]=R0;
[currPCB+8]=R1;
[currPCB+9]=R2;
[currPCB+10]=R3;
[currPCB+11]=R4;
[currPCB+12]=R5;
[currPCB+13]=R6;
[currPCB+14]=R7;

breakpoint;
//second process
alias newPID S3;
alias currpid S0;
alias currpcb S5;
currpid=(PTBR-1024)/8;
currpcb=READY_LIST+32*currpid;
if(currpid==31) then
    newPID=0;
else
    newPID=currpid+1;
endif;

while(newPID!=currpid) do                      //Round Robin Algorithm
   if([READY_LIST+newPID*32+1]==1) then
        break;
   endif;
   if(newPID==31) then
      newPID=0;
   else
      newPID=newPID+1;
   endif;       
endwhile;

if(newPID==currpid) then
   [currpcb+1]=2;
   ireturn;
endif;
   


alias newPCB S1;
newPCB=(READY_LIST+newPID*32);

[newPCB+1]=2;
BP=[newPCB+2];
SP=[newPCB+3];
SP=SP+1;
PTBR=[newPCB+5];
PTLR=[newPCB+6];

R0=[newPCB+7];
R1=[newPCB+8];
R2=[newPCB+9];
R3=[newPCB+10];
R4=[newPCB+11];
R5=[newPCB+12];
R6=[newPCB+13];
R7=[newPCB+14];

alias newPHYSICALSP S4;

newPHYSICALSP= ([PTBR+2*(SP/512)]*512)+(SP%512);
[newPHYSICALSP]=[newPCB+4];

ireturn;
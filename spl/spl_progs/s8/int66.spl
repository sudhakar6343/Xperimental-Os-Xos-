alias physp S0;
physp = [PTBR+2*(SP/512)]*512+(SP%512);

alias filename S1;
alias it S2;



if([physp-1]==9) then
   filename=[physp-3];
    alias it S2;
    alias bb S6;
    it=0;
    while(it<64) do                //perform actions to check filename exists or not
       if([FAT+it*8]==filename) then
           bb=[FAT+it*8+2];
           break;
       endif;
       it=it+1;
    endwhile;
    
    if(it==64) then
      [physp-2]=-1;
      ireturn;
    endif;
  
    alias counter S3;
    alias counter2 S4;
    alias it2 S5;

    load(1,bb);
    it=0;
    counter=0;

    while(it<3) do              //counting the no.of data blocks in the new process
        if([512+it]!=-1) then
            counter=counter+1;
        endif;
        it=it+1;
    endwhile;
 
    counter2=0;

    it=25;

        while(it<64) do
       if([1280+it]==0) then          //counting no of free pages in physical memory
          counter2=counter2+1;
       endif;
       it=it+1;
    endwhile;

    if(!(counter<=counter2)) then
        [physp-2]=-1;
        ireturn;
    endif;
  

     counter2=25;
    counter=0;
    it=0;
     while(it<3) do


        if([512+it]!=-1) then
             
             while([1280+counter2]!=0) do   //searching for a new free page in memory free list
            counter2=counter2+1;
            endwhile;
            [1280+counter2]=1;
            load(counter2,[512+it]); 
 
            counter=PTBR+it*2;
            [1280+[counter]]=[1280+[counter]]-1;           
            [counter]=counter2;
            [counter+1]="01";
            it=it+1;
        else
           break;
        endif;
     endwhile;

    while(it<3) do
      counter=PTBR+it*2;
      if([counter]!=-1) then
      [1280+[counter]]=[1280+[counter]]-1;
      endif;
      [counter]="-1";
      [counter+1]="00";
      it=it+1;
    endwhile;

  
       
  [PTBR+6]=counter2;  //setting up the stack
  [PTBR+7]="01";
  
    alias fileindex S3;
    alias pcb S4;
   

    pcb=READY_LIST+ ((PTBR-1024)/8)*32;
    it=0;
    

    alias counter S9;
    
    while(it<8) do               //closing all the files opened by the current process
        if([pcb+15+it*2]!=-1) then
           counter=pcb+15+it*2;
            fileindex=[counter];
            [counter]=-1;
            [counter+1]=-1;
            counter=FILE_TABLE+fileindex*2+1;
            it2=[counter]-1;
            [counter]=it2;
            if(it2==0) then
               [FILE_TABLE+fileindex*2]=-1;
            endif;
        endif;
        it=it+1;
    endwhile;

   
    SP=3*512;
    physp= [PTBR+2*(SP/512)]*512+(SP%512);
    [physp]=0;
    ireturn;
        
endif;

if([physp-1]==11) then
    it=(PTBR-1024)/8;
    [physp-2]=it;
    ireturn;    
endif;

if([physp-1]==12) then
    it=[READY_LIST + (PTBR-1024)*4 + 31];
    [physp-2]=it;
    ireturn;
endif;